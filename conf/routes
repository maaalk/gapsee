# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#Home
GET     /                           controllers.HomeController.index
GET    /logout                           controllers.HomeController.logout

#Courses
GET     /courses                    controllers.CourseController.index
GET     /courses/tutor              controllers.CourseController.tutorIndex
GET     /courses/:id                controllers.CourseController.show(id : Integer)
GET     /courses/tutor/:id          controllers.CourseController.tutorShow(id : Integer)
GET     /courses/join/:id           controllers.CourseController.join(id : Integer)
GET     /courses/quit/:id           controllers.CourseController.quit(id : Integer)
GET     /courses/leaderboard/:id    controllers.CourseController.leaderboard(id : Integer)
GET     /courses/myleaderboard/:id  controllers.CourseController.userLeaderboard(id : Integer)
#GET     /courses/create             controllers.CourseController.create()
#GET     /courses/edit/:id           controllers.CourseController.edit(id : Integer)
#POST    /courses/edit               controllers.CourseController.update()
#POST    /courses/create             controllers.CourseController.save()
+ nocsrf
DELETE  /courses/delete/:id         controllers.CourseController.destroy(id : Integer)


#Badges
GET     /badges/:id                 controllers.BadgeController.show(id : Integer)
GET     /badges/overview/:id        controllers.BadgeController.tutorShow(id : Integer)
#GET     /badges/create              controllers.BadgeController.create()
#GET     /badges/edit/:id            controllers.BadgeController.edit(id : Integer)
#POST    /badges/edit                controllers.BadgeController.update()
#POST    /badges/create              controllers.BadgeController.save()
#DELETE  /badges/delete/:id          controllers.BadgeController.destroy(id : Integer)

#Evidences
GET     /evidences/create/:id           controllers.EvidenceController.create(id : Integer)
GET     /evidences/evaluate/:id         controllers.EvidenceController.evaluate(id : Integer)
GET     /evidences/download/:id         controllers.EvidenceController.evidenceDownload(id : Integer)
GET     /evidences/edit/:id             controllers.EvidenceController.edit(id : Integer)
GET     /evidences/log/:id              controllers.EvidenceController.evidenceLog(id : Integer)
POST    /evidences/save                 controllers.EvidenceController.save(id : Integer)
+ nocsrf
POST    /evidences/evaluationeresult    controllers.EvidenceController.evaluationResult(id : Integer)
+ nocsrf
POST    /evidences/edit:id              controllers.EvidenceController.update(id : Integer)


#User
+ nocsrf
POST    /login                          controllers.UserController.authenticate()
GET     /create                         controllers.UserController.create()
+ nocsrf
POST    /create                         controllers.UserController.save()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
